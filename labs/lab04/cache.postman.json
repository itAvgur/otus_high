{
  "info": {
    "_postman_id": "74aa57af-5f1d-478f-bd31-ffbef02f7882",
    "name": "high-available",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "21634154"
  },
  "item": [
    {
      "name": "Base",
      "item": [
        {
          "name": "Register user with empty pass",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"id\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"\",\n    \"passRepeat\": \"\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register user with not equal pass",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const responseJson = pm.response.json();",
                  "  pm.expect(responseJson.code).to.eql(\"BAD_REQUEST\");",
                  "  pm.expect(responseJson.message).to.eql(\"passwords must be equal\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"{{pass}}\",\n    \"passRepeat\": \"{{pass}}123\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register user",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "let str = \"login_\" + Math.random().toString().substr(2,5)",
                  "console.log(str)",
                  "pm.collectionVariables.set(\"login\", str)"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.id).is.not.null;",
                  "  pm.expect(res.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
                  "  pm.expect(res.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
                  "  pm.expect(res.age).to.eql(parseInt(pm.collectionVariables.get(\"age\")));",
                  "  pm.expect(res.gender).to.eql(pm.collectionVariables.get(\"gender\"));",
                  "  pm.expect(res.city).to.has.property(\"name\", \"IKT\");",
                  "  pm.collectionVariables.set(\"id\", pm.response.json().id)",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"{{pass}}\",\n    \"passRepeat\": \"{{pass}}\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register user again",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const responseJson = pm.response.json();",
                  "  pm.expect(responseJson.code).to.eql(\"BAD_REQUEST\");",
                  "  pm.expect(responseJson.message).to.eql(\"login is already exists\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"{{pass}}\",\n    \"passRepeat\": \"{{pass}}\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get user, no token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/user/get/{{id}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "get",
                "{{id}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get user, wrong token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/user/get/{{id}}?token=wrong_token",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "get",
                "{{id}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "wrong_token"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "authenticate user not valid pass",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"wrong_pass\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/login",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "authenticate user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "      pm.collectionVariables.set(\"token\", pm.response.json().token)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"{{pass}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/login",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get user by id, authenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.id).to.eql(parseInt(pm.collectionVariables.get(\"id\")));",
                  "  pm.expect(res.firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
                  "  pm.expect(res.lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
                  "  pm.expect(res.age).to.eql(parseInt(pm.collectionVariables.get(\"age\")));",
                  "  pm.expect(res.gender).to.eql(pm.collectionVariables.get(\"gender\"));",
                  "  pm.expect(res.city).to.has.property(\"name\", \"IKT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "password",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "user",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "9d20992f-9a68-4128-91ed-7d47330c0aca",
                "type": "text"
              }
            ],
            "url": {
              "raw": "http://{{host}}:{{port}}/user/get/{{id}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "get",
                "{{id}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Caching",
      "item": [
        {
          "name": "Register user friend",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "let str = \"login_\" + Math.random().toString().substr(2,5)",
                  "console.log(str)",
                  "pm.collectionVariables.set(\"loginFriend\", str)"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.id).is.not.null;",
                  "  pm.collectionVariables.set(\"idFriend\", pm.response.json().id)",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{loginFriend}}\",\n    \"pass\": \"pass\",\n    \"passRepeat\": \"pass\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Authenticate uses friend",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "      pm.collectionVariables.set(\"token\", pm.response.json().token)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{loginFriend}}\",\n    \"pass\": \"pass\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/login",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.collectionVariables.set(\"postId\", pm.response.json().id)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"text\": \"Post of friend\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/post?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get post of friend",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();;",
                  "  pm.expect(res.id).to.eql(parseInt(pm.collectionVariables.get(\"postId\")));",
                  "  pm.expect(res.authorId).to.eql(parseInt(pm.collectionVariables.get(\"idFriend\")));",
                  "  pm.expect(res.text).to.eql(\"Post of friend\");",
                  " });"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/{{postId}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "{{postId}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register user",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "let str = \"login_\" + Math.random().toString().substr(2,5)",
                  "console.log(str)",
                  "pm.collectionVariables.set(\"login\", str)"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.id).is.not.null;",
                  "  pm.collectionVariables.set(\"id\", pm.response.json().id)",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"pass\",\n    \"passRepeat\": \"pass\",\n    \"user\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": {{age}},\n        \"gender\": \"{{gender}}\",\n        \"city\": {\n            \"name\": \"{{city}}\"\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/user/register",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "user",
                "register"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Authenticate user",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "      pm.collectionVariables.set(\"token\", pm.response.json().token)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"login\": \"{{login}}\",\n    \"pass\": \"pass\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/login",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "login"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Feed post empty",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.length).to.eql(0);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/feed?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "feed"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "offset",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "5",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add friend",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/friend/{{idFriend}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "friend",
                "{{idFriend}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Feed post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.length).to.eql(1);",
                  "  pm.expect(res[0].id).to.eql(parseInt(pm.collectionVariables.get(\"postId\")));",
                  "  pm.expect(res[0].authorId).to.eql(parseInt(pm.collectionVariables.get(\"idFriend\")));",
                  "  pm.expect(res[0].text).to.eql(\"Post of friend\");",
                  " });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/feed?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "feed"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "1",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete friend",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/friend/{{idFriend}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "friend",
                "{{idFriend}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Feed post empty",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();",
                  "  pm.expect(res.length).to.eql(0);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/feed?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "feed"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete friend",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/friend/{{idFriend}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "friend",
                "{{idFriend}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get post not existed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"postId\", 999999)"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/2000000?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "2000000"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update post not existed",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": 2000000,\n    \"text\": \"Updated post text\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/post?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete post not existed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/2000000?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "2000000"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.collectionVariables.set(\"postId\", pm.response.json().id)",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"text\": \"First text of post\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/post?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();;",
                  "  pm.expect(res.id).to.eql(parseInt(pm.collectionVariables.get(\"postId\")));",
                  "  pm.expect(res.authorId).to.eql(parseInt(pm.collectionVariables.get(\"id\")));",
                  "  pm.expect(res.text).to.eql(\"First text of post\");",
                  " });"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/{{postId}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "{{postId}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update post",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": {{postId}},\n    \"text\": \"Updated post text\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://{{host}}:{{port}}/post?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get post updated",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON test\", () => {",
                  "  const res = pm.response.json();;",
                  "  pm.expect(res.id).to.eql(parseInt(pm.collectionVariables.get(\"postId\")));",
                  "  pm.expect(res.authorId).to.eql(parseInt(pm.collectionVariables.get(\"id\")));",
                  "  pm.expect(res.text).to.eql(\"Updated post text\");",
                  " });"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/{{postId}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "{{postId}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/{{postId}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "{{postId}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get post not existed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"postId\", 999999)"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/2000000?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "2000000"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete post not existed",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://{{host}}:{{port}}/post/{{postId}}?token={{token}}",
              "protocol": "http",
              "host": [
                "{{host}}"
              ],
              "port": "{{port}}",
              "path": [
                "post",
                "{{postId}}"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{token}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "host",
      "value": "127.0.0.1",
      "type": "string"
    },
    {
      "key": "port",
      "value": "8080",
      "type": "string"
    },
    {
      "key": "id",
      "value": "",
      "type": "string"
    },
    {
      "key": "login",
      "value": "login_37310",
      "type": "string"
    },
    {
      "key": "pass",
      "value": "Az123123",
      "type": "string"
    },
    {
      "key": "firstName",
      "value": "Yury",
      "type": "string"
    },
    {
      "key": "lastName",
      "value": "Melnikov",
      "type": "string"
    },
    {
      "key": "age",
      "value": "43",
      "type": "string"
    },
    {
      "key": "gender",
      "value": "MALE",
      "type": "string"
    },
    {
      "key": "city",
      "value": "IKT",
      "type": "string"
    },
    {
      "key": "hobbies",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionKey",
      "value": "",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "postId",
      "value": "",
      "type": "string"
    },
    {
      "key": "idFriend",
      "value": "",
      "type": "string"
    },
    {
      "key": "loginFriend",
      "value": "",
      "type": "string"
    }
  ]
}